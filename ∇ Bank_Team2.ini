∇ Bank Ku
    ∇ core
         ∇ guards
              auth.guard.ts
              module-import.guard.ts
              no-auth.guard.ts
         ∇ interceptor
              token.interceptor.ts
              error.interceptor.ts
         ∇ services
          Account.Service.ts
		import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { AccCust } from '../entity/AccCust';


@Injectable({
  providedIn: 'root'
})
export class AccountsService {

  private baseUrl = 'http://localhost:8080';

  constructor(private http:HttpClient) { }

   headers = new HttpHeaders()
    .append(
      'Content-Type',
      'application/json'
    );

  saveAccounts(accCust:AccCust):Observable<any>{
    return this.http.post(`${this.baseUrl}/accounts/save`,accCust);
  }

  doLogin(accCust:AccCust):Observable<any>{
    return this.http.post(`${this.baseUrl}/accounts/login`,accCust);
  }

  getCustomer(id:string):Observable<any>{
    return this.http.get(`${this.baseUrl}/accounts/find/${id}`)
  }

  infoSaldo(id:string):Observable<any>{
    return this.http.get(`${this.baseUrl}/accounts/info/${id}`)
  }

  showTransaction(id:string):Observable<any>{
    return this.http.get(`${this.baseUrl}/accounts/findtrans/${id}`)
  }
}

	Customer.Service.ts
		import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { Customer } from '../entity/customer';

@Injectable({
  providedIn: 'root'
})
export class CustomerService {

  private baseUrl = 'http://localhost:8080';

  constructor(private http : HttpClient) { }

  saveCustomer(customer : Customer):Observable<any>{
    return this.http.post(`${this.baseUrl}/customer/save`,customer);
    }

}

	Transaction.Service.ts
		import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { AccCust } from '../entity/AccCust';
import { Transaction } from '../entity/transaction';

@Injectable({
  providedIn: 'root'
})
export class TransactionService {

  private baseUrl = 'http://localhost:8080';

  constructor(private http:HttpClient) { }

  doDeposit(trans:Transaction):Observable<any>{
    return this.http.post(`${this.baseUrl}/trans/deposit`,trans);
  }

  doWithdraw(trans:AccCust):Observable<any>{
    return this.http.post(`${this.baseUrl}/trans/withdraw`,trans)
  }

  doTransfer(trans:AccCust):Observable<any>{
    return this.http.post(`${this.baseUrl}/trans/transfer`,trans)
  }

}
         ∇ components
             Account-Register.component.ts
		import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { AccCust } from 'src/app/entity/AccCust';

import { AccountsService } from 'src/app/services/accounts.service';

@Component({
  selector: 'app-account-register',
  templateUrl: './account-register.component.html',
  styleUrls: ['./account-register.component.css']
})
export class AccountRegisterComponent implements OnInit {

  accCust:AccCust=new AccCust();


  constructor(private accService : AccountsService,private router : Router) { }

  ngOnInit() {

  }

  save(id:number){
    if(this.accCust.nik==null||this.accCust.nik==0){
      alert("NIK Tidak Boleh Kosong");
    }else if(this.accCust.email==null||this.accCust.email==""){
      alert("Email Tidak Boleh Kosong");
    }else if(this.accCust.pin==null){
      alert("Masukan PIN anda");
    }else{
    this.accService.saveAccounts(this.accCust).subscribe(
        (response:number)=>{
          this.registerSuccess(response);
        },error=> {
          alert("Data Tidak Bisa Digunakan")
        }
      );
    }
  }

  submit(id:number){
    this.save(id);
  }

  registerSuccess(id:number){
    this.router.navigate(['accountRegisterSuccess',id]);
  }

  back(){
    this.router.navigate(['welcomePage']);
  }

}

	Account-Register.Component.Html
		<style>
  button{
    width: 200px;
    height: 50px;
    border-radius: 12px;
    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
    font-size: larger;
    transition-duration: 0.4s;
    color: black;
    background-color:yellow;
    border-color: yellow;
    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);
  transition-duration: 0.4s;
  }
  body{
    background-color: lawngreen;
    height: 340px;
    font-weight: 500;
    text-align: center;
  }
  input{
    width: 300px;
    height: 25px;
    margin: 5px auto;
  }
  button:hover{
  background-color: lightgreen;
  color: white;
  border-color: lightgreen;
  }
</style>
<body>
<h3>CREATE ACCOUNT</h3>
<div>
  <form (ngSubmit)="submit(accCust.nik)">
    <div class="form-group">
      <label >ID NUMBER</label>
      <input type="text" class="form-control"  name="nik" required [(ngModel)]="accCust.nik" maxlength="8">
    </div>
    <div class="form-group">
      <label >EMAIL</label>
      <input type="text" class="form-control" name="email" required [(ngModel)]="accCust.email">
    </div>
    <div class="form-group">
      <label >PIN</label>
      <input type="text" class="form-control" name="pin" required [(ngModel)]="accCust.pin" maxlength="6">
    </div>

    <br/>
    <button  type="submit" class="btn btn-success" >SUBMIT</button>
    <button style="margin-left: 20px;" class="btn btn-primary" (click)="back()">BACK</button>
  </form>
</div>
</body>

		Account-register-success.component.ts
			import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { AccountsService } from 'src/app/services/accounts.service';

@Component({
  selector: 'app-account-register-success',
  templateUrl: './account-register-success.component.html',
  styleUrls: ['./account-register-success.component.css']
})
export class AccountRegisterSuccessComponent implements OnInit {

  rek:number;
  show:Object;
  constructor(private router: Router,private route: ActivatedRoute, private service:AccountsService) { }

  ngOnInit() {
    this.rek= this.route.snapshot.params['id']
  }

  back(){
    this.router.navigate(['welcomePage']);
  }

}

		Account-Register-Success.component.html
			<style>
  button{
    width: 200px;
    height: 50px;
    border-radius: 12px;
    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
    font-size: larger;
    transition-duration: 0.4s;
    color: black;
    background-color:yellow;
    border-color: yellow;
    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);
  transition-duration: 0.4s;
  }
  button:hover{
  background-color: lightgreen;
  color: white;
  border-color: lightgreen;
  }
  body{
    background-color: lawngreen;
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    font-weight: 500;
    text-align: center;
    height: 200px;
  }
</style>
<body>
<div>
  <p>Congratulation! Your accounts have been registered!</p>
  <label ><b>ACCOUNT NUMBER :</b></label>{{rek}}
</div>
<br/>
<div>
  <button class="btn btn-primary" (click)="back()">BACK</button>
</div>
</body>

		Customer-Register.component.ts
			import { async, ComponentFixture, TestBed } from '@angular/core/testing';
import { CustomerRegisterComponent } from './customer-register.component';

describe('CustomerRegisterComponent', () => {
  let component: CustomerRegisterComponent;
  let fixture: ComponentFixture<CustomerRegisterComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ CustomerRegisterComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(CustomerRegisterComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

		Customer-Register.component.html
			<style>
  button{
    width: 200px;
    height: 50px;
    border-radius: 12px;
    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
    font-size: larger;
    transition-duration: 0.4s;
    color: black;
    background-color:yellow;
    border-color: yellow;
    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);
  transition-duration: 0.4s;
  }
  body{
    background-color: lawngreen;
    height: 360px;
    font-weight: 500;
    text-align: center;
  }
  input{
    width: 300px;
    height: 25px;
    margin: 5px auto;
  }
  button:hover{
  background-color: lightgreen;
  color: white;
  border-color: lightgreen;
  }
</style>
<body>
<h3>REGISTER</h3>
<div>
  <form (ngSubmit)="submit()">
    <div class="form-group">
      <label >ID NUMBER</label>
      <input type="text" class="form-control"  name="nik" required [(ngModel)]="customer.nik" maxlength="8">
    </div>
    <div class="form-group">
      <label >FULL NAME</label>
      <input type="text" class="form-control"  name="lastName" required [(ngModel)]="customer.fullname">
    </div>
    <div class="form-group">
      <label >EMAIL</label>
      <input type="text" class="form-control" name="email" required [(ngModel)]="customer.email">
    </div>
    <div class="form-group">
      <label >ADDRESS</label>
      <input type="text" class="form-control" name="address" required [(ngModel)]="customer.address">
    </div>

    <br/>
    <button  type="submit" class="btn btn-success" >SUBMIT</button>

    <button style="margin-left: 20px;" class="btn btn-primary" (click)="back()">BACK</button>
  </form>
</div>
</body>

		Customer-Register-Success.component.ts
			import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';

@Component({
  selector: 'app-customer-register-success',
  templateUrl: './customer-register-success.component.html',
  styleUrls: ['./customer-register-success.component.css']
})
export class CustomerRegisterSuccessComponent implements OnInit {

  constructor(private router : Router) { }

  ngOnInit() {
  }

  back(){
    this.router.navigate(['accountRegister']);
  }

}

		Customer-Register-Success.component.html
			<style>
  button{
    width: 200px;
    height: 50px;
    border-radius: 12px;
    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
    font-size: larger;
    transition-duration: 0.4s;
    color: black;
    background-color:yellow;
    border-color: yellow;
    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);
  transition-duration: 0.4s;
  }
  button:hover{
  background-color: lightgreen;
  color: white;
  border-color: lightgreen;
  }
  body{
    background-color: lawngreen;
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    font-weight: 500;
    text-align: center;
    height: 200px;
  }
</style>
<body>
<p>Congratulation! You have been registered!</p>
<p>Next step : Register your account!</p>
<br>
<div>
  <button class="btn btn-primary" (click)="back()">CREATE ACCOUNT</button>
</div>
</body>

		Deposit.component.ts
			import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { Transaction } from 'src/app/entity/transaction';
import { TransactionService } from 'src/app/services/transaction.service';

@Component({
  selector: 'app-deposit',
  templateUrl: './deposit.component.html',
  styleUrls: ['./deposit.component.css']
})
export class DepositComponent implements OnInit {

  trans:Transaction=new Transaction();
  accC:Transaction;
  id:string;


  constructor(private transService : TransactionService,private router : Router,private route:ActivatedRoute) { }

  ngOnInit() {
    this.id= this.route.snapshot.params['id']
  }

  save(){
    if(this.trans.amount%50000!=0){
      alert("Masukan Nominal kelipatan 50000");
    }else{
      this.trans.accId = this.id
    this.transService.doDeposit(this.trans).subscribe(
      (response)=>{
          this.accC=response;
          this.depoSuccess(this.id)
        },error=> {
          alert("deposit gagal")
        }
      );
    }
  }

  submit(){
    this.save();
  }

  depoSuccess(id:string ){
    this.router.navigate(['depositSuccess',id]);
  }

  back(){
    this.router.navigate(['home',this.id]);
  }

}
		Deposit.component.html
			<style>
  button{
    width: 200px;
    height: 50px;
    border-radius: 12px;
    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
    font-size: larger;
    transition-duration: 0.4s;
    color: black;
    background-color:yellow;
    border-color: yellow;
    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);
  transition-duration: 0.4s;
  }
  body{
    background-color: lawngreen;
    height: 230px;
    font-weight: 500;
    text-align: center;
  }
  input{
    width: 300px;
    height: 25px;
    margin: 5px auto;
  }
  button:hover{
  background-color: lightgreen;
  color: white;
  border-color: lightgreen;
  }
</style>
<body>
<h3>DEPOSIT</h3>
<div>
  <form (ngSubmit)="submit()">
    <div class="form-group">
      <label >INPUT THE AMOUNT</label>
      <input type="text" class="form-control"  name="amount" required [(ngModel)]="trans.amount" maxlength="8">
    </div>

    <br/>
    <button  type="submit" class="btn btn-success" >SUBMIT</button>
    <button style="margin-left: 20px;" class="btn btn-primary" (click)="back()">BACK</button>
  </form>

</div>
</body>

		Deposit-success.component.ts
			import { Component, OnInit } from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router';

@Component({
  selector: 'app-deposit-success',
  templateUrl: './deposit-success.component.html',
  styleUrls: ['./deposit-success.component.css']
})
export class DepositSuccessComponent implements OnInit {

  id:string;
  constructor(private router: Router,private route: ActivatedRoute) { }

  ngOnInit() {
    this.id= this.route.snapshot.params['id']
  }

  back(){
    this.router.navigate(['home',this.id]);
  }

}

		Deposit-success.component.html
			<style>
     button{
    width: 200px;
    height: 50px;
    border-radius: 12px;
    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
    font-size: larger;
    transition-duration: 0.4s;
    color: black;
    background-color:yellow;
    border-color: yellow;
    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);
  transition-duration: 0.4s;
  }
  button:hover{
  background-color: lightgreen;
  color: white;
  border-color: lightgreen;
  }
  body{
    background-color: lawngreen;
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    font-weight: 500;
    text-align: center;
    height: 250px;
  }
</style>
<body>
<h2>TRANSACTION SUCCESS!</h2><br/><img src="/assets/image/thumb1.png" style="width: 60px;">
<br/>
<br/>
<br/>
<button style="margin-left: 20px;" class="btn btn-primary" (click)="back()">BACK</button>
</body>

		Homepage.component.ts
			import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { AccountsService } from 'src/app/services/accounts.service';

@Component({
  selector: 'app-home-page',
  templateUrl: './home-page.component.html',
  styleUrls: ['./home-page.component.css']
})
export class HomePageComponent implements OnInit {

  id:string;

  constructor(private router: Router,private route: ActivatedRoute) { }

  ngOnInit() {
    this.id= this.route.snapshot.params['id']
  }

  goProfile(){
    this.router.navigate(['profile/',this.id])
  }

  goDeposit(){
    this.router.navigate(['deposit/',this.id])
  }

  goWithdraw(){
    this.router.navigate(['withdraw/',this.id])
  }

  goTransfer(){
    this.router.navigate(['transfer/',this.id])
  }

  goInfo(){
    this.router.navigate(['info/',this.id])
  }

}
		Homepage.component.html
			<style>
  button{
    width: 200px;
    height: 50px;
    border-radius: 12px;
    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
    font-size: larger;
    transition-duration: 0.4s;
    color: black;
    background-color:yellow;
    border-color: yellow;
    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);
  transition-duration: 0.4s;
  }
  body{
    background-color: lawngreen;
    height: 520px;
    font-weight: 500;
    text-align: center;
  }
  button:hover{
  background-color: lightgreen;
  color: white;
  border-color: lightgreen;
  }
</style>
<body>
  <h2>WELCOME TO</h2>
  <h1>BANK KU</h1>
  <br/>
  <h6>HOW CAN WE HELP YOU?</h6>
<div>
  <button class="btn btn-primary " (click)="goProfile()">PROFILE</button>
</div>
<br/>
<div>
  <button class="btn btn-primary " (click)="goInfo()">INFO</button>
</div>
<br/>
<div>
  <button class="btn btn-primary " (click)="goDeposit()">DEPOSIT</button>
</div>
<br/>
<div>
  <button class="btn btn-primary " (click)="goTransfer()">TRANSFER</button>
</div>
<br/>
<div>
  <button class="btn btn-primary " (click)="goWithdraw()">WITHDRAW</button>
</div>
</body>

		Info.component.ts
			import { Component, OnInit } from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router';

@Component({
  selector: 'app-info',
  templateUrl: './info.component.html',
  styleUrls: ['./info.component.css']
})
export class InfoComponent implements OnInit {
id:string;

  constructor(private router: Router,private route: ActivatedRoute) { }

  ngOnInit() {
    this.id= this.route.snapshot.params['id']
  }

  infoSaldo(){
    this.router.navigate(['saldo',this.id]);
  }

  infoTransaksi(){
    this.router.navigate(['showTransaction',this.id]);
  }

  back(){
    this.router.navigate(['home',this.id]);
  }

}
		Info.component.html
			<style>
   button{
    width: 200px;
    height: 50px;
    border-radius: 12px;
    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
    font-size: larger;
    transition-duration: 0.4s;
    color: black;
    background-color:yellow;
    border-color: yellow;
    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);
  transition-duration: 0.4s;
  }
  body{
    background-color: lawngreen;
    height: 320px;
    font-weight: 500;
    text-align: center;
  }
  button:hover{
  background-color: lightgreen;
  color: white;
  border-color: lightgreen;
  }
</style>
<body>
  <h1>INFORMATION</h1>
  <br/>
<div>
  <button class="btn btn-primary " (click)="infoSaldo()">BALANCE</button>
</div>
<br/>
<div>
  <button class="btn btn-primary " (click)="infoTransaksi()">TRANSACTION</button>
</div>
<br/>
<div>
  <button class="btn btn-primary " (click)="back()">BACK</button>
</div>
</body>

		info-saldo.component.ts
			import { Component, OnInit } from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router';
import { AccCust } from 'src/app/entity/AccCust';
import { AccountsService } from 'src/app/services/accounts.service';

@Component({
  selector: 'app-info-saldo',
  templateUrl: './info-saldo.component.html',
  styleUrls: ['./info-saldo.component.css']
})
export class InfoSaldoComponent implements OnInit {

  id:string;

  accs:AccCust;

  constructor(private router: Router,private route: ActivatedRoute, private service:AccountsService) { }

  ngOnInit() {

    this.id= this.route.snapshot.params['id']

    this.accs=new AccCust();

    this.service.infoSaldo(this.id).subscribe(
      data=>{
        this.accs = data;

      },
      error=>console.log(error)
    );
  }

  back(){
    this.router.navigate(['info',this.id]);
  }

}
		Info-saldo.component.html
			
<h2>ACCOUNT DETAIL</h2>
<hr/>
<div>
  <label ><b>NAME</b></label><br/>
  {{accs.fullname}}
</div>
<br/>
<div>
  <label ><b>ACCOUNT NUMBER</b></label><br/>
  {{accs.accNumber}}
</div>
<br/>
<div>
  <label ><b>BALANCE</b></label><br>
  {{accs.balance}}
</div>

<br>

<button class="btn btn-primary" (click)="back()">BACK</button>
</body>

		login.component.ts
			import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { AccCust } from 'src/app/entity/AccCust';
import { Accounts } from 'src/app/entity/accounts';
import { AccountsService } from 'src/app/services/accounts.service';

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css']
})
export class LoginComponent implements OnInit {

  accCust:AccCust=new AccCust();
  accC:AccCust;


  constructor(private accService : AccountsService,private router : Router) { }

  ngOnInit() {

  }

  save(){
    if(this.accCust.accNumber==null||this.accCust.accNumber==0){
      alert("INSERT YOUR ACCOUNT NUMBER");
    }else if(this.accCust.pin==null||this.accCust.pin==0){
      alert("INSERT YOUR PIN");
    }else{
    this.accService.doLogin(this.accCust).subscribe(
      (response)=>{
          this.accC=response;
          this.loginSuccess(this.accC.id)
        },error=> {
          alert("WRONG INPUT!")
        }
      );
    }
  }

  submit(){
    this.save();
  }

  loginSuccess(id:string){
    this.router.navigate(['home',id]);
  }

  back(){
    this.router.navigate(['welcomePage']);
  }


}

		login.component.html
			<style>
  button{
    width: 200px;
    height: 50px;
    border-radius: 12px;
    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
    font-size: larger;
    transition-duration: 0.4s;
    color: black;
    background-color:yellow;
    border-color: yellow;
    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);
  transition-duration: 0.4s;
  }
  body{
    background-color: lawngreen;
    height: 250px;
    font-weight: 500;
    text-align: center;
  }
  input{
    width: 300px;
    height: 25px;
    margin: 5px auto;
  }
  button:hover{
  background-color: lightgreen;
  color: white;
  border-color: lightgreen;
  }
</style>
<body>
<h3>SIGN IN</h3>
<div>
  <form (ngSubmit)="submit()">
    <div class="form-group">
      <label >ACCOUNT NUMBER</label>
      <input type="text" class="form-control"  name="accNumber" required [(ngModel)]="accCust.accNumber" maxlength="8">
    </div>
    <div class="form-group">
      <label >PIN</label>
      <input type="text" class="form-control" name="pin" required [(ngModel)]="accCust.pin" maxlength="6">
    </div>

    <br/>
    <button  type="submit" class="btn btn-success" >SUBMIT</button>
    <button style="margin-left: 20px;" class="btn btn-primary" (click)="back()">BACK</button>
  </form>
</div>
</body>

		profile.component.ts
			import { Component, OnInit } from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router';
import { Observable } from 'rxjs';
import { Customer } from 'src/app/entity/customer';
import { AccountsService } from 'src/app/services/accounts.service';

@Component({
  selector: 'app-profile',
  templateUrl: './profile.component.html',
  styleUrls: ['./profile.component.css']
})
export class ProfileComponent implements OnInit {

  id:string;

  customer:Customer;

  constructor(private router: Router,private route: ActivatedRoute, private service:AccountsService) { }

  ngOnInit() {

    this.id= this.route.snapshot.params['id']

    this.customer=new Customer();

    this.service.getCustomer(this.id).subscribe(
      data=>{
        this.customer = data;

      },
      error=>console.log(error)
    );
  }

  back(){
    this.router.navigate(['home',this.id]);
  }
}

		profile.component.html
			<style>
  button{
    width: 200px;
    height: 50px;
    border-radius: 12px;
    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
    font-size: larger;
    transition-duration: 0.4s;
    color: black;
    background-color:yellow;
    border-color: yellow;
    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);
  transition-duration: 0.4s;
  }
  body{
    background-color: lawngreen;
    height: 420px;
    font-weight: 500;
    text-align: center;
  }
  button:hover{
  background-color: lightgreen;
  color: white;
  border-color: lightgreen;
  }
</style>
<body>
<h2>PROFILE DETAIL</h2>
<hr/>
<div>
  <label ><b>ID NUMBER </b></label><br/>
  {{customer.nik}}
</div>
<br/>
<div>
  <label ><b>NAME  </b></label><br/>
  {{customer.fullname}}
</div>
<br/>
<div>
  <label ><b>EMAIL  </b></label><br/>
  {{customer.email}}
</div>
<br/>
<div>
  <label ><b>ADDRESS  </b></label><br/>
  {{customer.address}}
</div>

<br>

<button class="btn btn-primary" (click)="back()">BACK</button>
</body>

		show-transaction.component.ts
			import { Component, OnInit } from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router';
import { Observable } from 'rxjs';
import { TransInfo } from 'src/app/entity/TransInfo';
import { AccountsService } from 'src/app/services/accounts.service';

@Component({
  selector: 'app-show-transaction',
  templateUrl: './show-transaction.component.html',
  styleUrls: ['./show-transaction.component.css']
})
export class ShowTransactionComponent implements OnInit {

  id:string
  trans: Observable<TransInfo[]>;

  constructor(private router: Router,private route: ActivatedRoute,private accService : AccountsService) { }

  ngOnInit() {
    this.id= this.route.snapshot.params['id']
    this.trans = this.accService.showTransaction(this.id);

  }

  back(){
    this.router.navigate(['info',this.id]);
  }

}

		show-transaction.component.html
			<style>
   button{
    width: 150px;
    height: 50px;
    border-radius: 12px;
    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
    font-size: larger;
    transition-duration: 0.4s;
    color: black;
    background-color:yellow;
    border-color: yellow;
    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);
  transition-duration: 0.4s;
  }
  body{
    background-color: lawngreen;
    height: 420px;
    font-weight: 500;
    text-align: center;
  }
  button:hover{
  background-color: lightgreen;
  color: white;
  border-color: lightgreen;
  }
</style>
<body>
<div class="panel panel-primary">
  <div class="panel-hiding">
    <h2>BALANCE ACTICVITY</h2>
  </div>
  <div class="panel-body">
    <div style="text-align: right;">
      <button style="margin-left: 20px;" class="btn btn-primary" (click)="back()">BACK</button>
    </div>
    <table class="table table-striped">
      <thead>
        <tr>
          <th>Date</th>
          <th>Type</th>
          <th>Amount</th>
          <th>Balance</th>
          <th>To-From</th>
          <th>Account Number</th>
        </tr>
      </thead>
      <tbody>
        <tr *ngFor="let e of trans | async">
          <td>{{e.transDate}}</td>
          <td>{{e.type}}</td>
          <td>{{e.amount}}</td>
          <td>{{e.balance}}</td>
          <td>{{e.fullname}}</td>
          <td>{{e.accNumber}}</td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
</body>

		transfer.component.ts
			import { Component, OnInit } from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router';
import { AccCust } from 'src/app/entity/AccCust';
import { Transaction } from 'src/app/entity/transaction';
import { TransactionService } from 'src/app/services/transaction.service';

@Component({
  selector: 'app-transfer',
  templateUrl: './transfer.component.html',
  styleUrls: ['./transfer.component.css']
})
export class TransferComponent implements OnInit {

  accC:Transaction;
  id:string;
  accs:AccCust=new AccCust();


  constructor(private transService : TransactionService,private router : Router,private route:ActivatedRoute) { }

  ngOnInit() {
    this.id= this.route.snapshot.params['id']
  }

  save(){
    if(this.accs.amount%50000!=0){
      alert("Masukan Nominal kelipatan 50000");
    }else if(this.accs.accNumber==0){
      alert("Masukan Rekening Tujuan Anda");
    }else{
      this.accs.accId = this.id
      this.transService.doTransfer(this.accs).subscribe(
      (response)=>{
          this.accC=response;
          this.transferSuccess(this.id)
        },error=> {
          alert("Transfer Gagal")
        }
      );
    }
  }

  submit(){
    this.save();
  }

  transferSuccess(id:string ){
    this.router.navigate(['transferSuccess',id]);
  }

  back(){
    this.router.navigate(['home',this.id]);
  }

}
		transfer.component.html
			<style>
  button{
    width: 200px;
    height: 50px;
    border-radius: 12px;
    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
    font-size: larger;
    transition-duration: 0.4s;
    color: black;
    background-color:yellow;
    border-color: yellow;
    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);
  transition-duration: 0.4s;
  }
  body{
    background-color: lawngreen;
    height: 300px;
    font-weight: 500;
    text-align: center;
  }
  input{
    width: 300px;
    height: 25px;
    margin: 5px auto;
  }
  button:hover{
  background-color: lightgreen;
  color: white;
  border-color: lightgreen;
  }
</style>
<body>
<h3>TRANSFER</h3>
<div>
  <form (ngSubmit)="submit()">
    <div class="form-group">
      <label >INPUT THE AMOUNT</label>
      <input type="text" class="form-control"  name="amount" required [(ngModel)]="accs.amount" maxlength="8">
    </div>
    <div class="form-group">
      <label >ACCOUNT NUMBER DESTINATION</label>
      <input type="text" class="form-control"  name="amount" required [(ngModel)]="accs.accNumber" maxlength="8">
    </div>
    <div class="form-group">
      <label >INSERT YOUR PIN</label>
      <input type="text" class="form-control"  name="pin" required [(ngModel)]="accs.pin" maxlength="6">
    </div>
    <br/>
    <button  type="submit" class="btn btn-success" >SUBMIT</button>
    <button style="margin-left: 20px;" class="btn btn-primary" (click)="back()">BACK</button>
  </form>
</div>
</body>

		transfer-success.component.ts
			import { Component, OnInit } from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router';

@Component({
  selector: 'app-transfer-success',
  templateUrl: './transfer-success.component.html',
  styleUrls: ['./transfer-success.component.css']
})
export class TransferSuccessComponent implements OnInit {

  id:string;
  constructor(private router: Router,private route: ActivatedRoute) { }

  ngOnInit() {
    this.id= this.route.snapshot.params['id']
  }

  back(){
    this.router.navigate(['home',this.id]);
  }


}
		transfer-success.component.html
			<style>
    button{
   width: 200px;
   height: 50px;
   border-radius: 12px;
   box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
   font-size: larger;
   transition-duration: 0.4s;
   color: black;
   background-color:yellow;
   border-color: yellow;
   box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);
 transition-duration: 0.4s;
 }
 button:hover{
 background-color: lightgreen;
 color: white;
 border-color: lightgreen;
 }
 body{
   background-color: lawngreen;
   font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
   font-weight: 500;
   text-align: center;
   height: 250px;
 }
</style>
<body>
<h2>TRANSACTION SUCCESS!</h2><br/><img src="/assets/image/thumb1.png" style="width: 60px;">
<br/>
<br/>
<br/>
<button style="margin-left: 20px;" class="btn btn-primary" (click)="back()">BACK</button>
</body>
		welcome-page.component.ts
			import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';

@Component({
  selector: 'app-welcome-page',
  templateUrl: './welcome-page.component.html',
  styleUrls: ['./welcome-page.component.css']
})
export class WelcomePageComponent implements OnInit {

  constructor(private router:Router) { }

  ngOnInit() {
  }

  login(){
    this.router.navigate(['login']);
  }

  accountRegister(){
    this.router.navigate(['accountRegister']);
  }

  customerRegister(){
    this.router.navigate(['customerRegister']);
  }

}
		welcome-page.component.html
			<style>
  body{
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    font-weight: 300;
    background-color: lawngreen;
  }
  button{
    width: 200px;
    height: 50px;
    border-radius: 12px;
    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
    font-size: larger;
    transition-duration: 0.4s;
    color: black;
    background-color:yellow;
    border-color: yellow;
  }
  button:hover {
  background-color: lightgreen;
  color: white;
  border-color: lightgreen;
  }
</style>
<body>
<div style="text-align: center;">
  <h1>BANK KU</h1>
</div>

<div style="text-align: center;">
<div>
  <button class="btn btn-primary " (click)="login()">E-BANK</button>
</div>
<br>
<div>
  <button class="btn btn-primary" (click)="accountRegister()">CREATE ACCOUNT</button>
</div>
<br>
<div>
  <button class="btn btn-primary" (click)="customerRegister()">REGISTER</button>
</div>
<br>
</div>
<div style="text-align: center;">
  <p>WE HERE TO HELP YOU</p>
</div>
</body>

		withdraw.component.ts
			import { Component, OnInit } from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router';
import { AccCust } from 'src/app/entity/AccCust';
import { Transaction } from 'src/app/entity/transaction';
import { TransactionService } from 'src/app/services/transaction.service';

@Component({
  selector: 'app-withdraw',
  templateUrl: './withdraw.component.html',
  styleUrls: ['./withdraw.component.css']
})
export class WithdrawComponent implements OnInit {

  accC:Transaction;
  id:string;
  accs:AccCust=new AccCust();


  constructor(private transService : TransactionService,private router : Router,private route:ActivatedRoute) { }

  ngOnInit() {
    this.id= this.route.snapshot.params['id']
  }

  save(){
    if(this.accs.amount%50000!=0){
      alert("Masukan Nominal kelipatan 50000");
    }else{
      this.accs.accId = this.id
      this.transService.doWithdraw(this.accs).subscribe(
      (response)=>{
          this.accC=response;
          this.withdrawSuccess(this.accC.accId)
        },error=> {
          alert("Withdraw Gagal")
        }
      );
    }
  }

  submit(){
    this.save();
  }

  withdrawSuccess(id:string ){
    this.router.navigate(['withdrawSuccess',id]);
  }

  back(){
    this.router.navigate(['home',this.id]);
  }

}
		withdraw.component.html
			<style>
 button{
    width: 200px;
    height: 50px;
    border-radius: 12px;
    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
    font-size: larger;
    transition-duration: 0.4s;
    color: black;
    background-color:yellow;
    border-color: yellow;
    box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);
  transition-duration: 0.4s;
  }
  body{
    background-color: lawngreen;
    height: 300px;
    font-weight: 500;
    text-align: center;
  }
  input{
    width: 300px;
    height: 25px;
    margin: 5px auto;
  }
  button:hover{
  background-color: lightgreen;
  color: white;
  border-color: lightgreen;
  }
</style>
<body>
<h3>WITHDRAW</h3>
<div>
  <form (ngSubmit)="submit()">
    <div class="form-group">
      <label >INPUT THE AMOUNT</label>
      <input type="text" class="form-control"  name="amount" required [(ngModel)]="accs.amount" maxlength="8">
    </div>
    <div class="form-group">
      <label >INPUT YOUR PIN</label>
      <input type="text" class="form-control"  name="pin" required [(ngModel)]="accs.pin" maxlength="6">
    </div>
    <br/>
    <button  type="submit" class="btn btn-success" >SUBMIT</button>
    <button style="margin-left: 20px;" class="btn btn-primary" (click)="back()">BACK</button>
  </form>
</div>
</body>

		withdraw-success.component.ts
			import { Component, OnInit } from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router';

@Component({
  selector: 'app-withdraw-success',
  templateUrl: './withdraw-success.component.html',
  styleUrls: ['./withdraw-success.component.css']
})
export class WithdrawSuccessComponent implements OnInit {

  id:string;
  constructor(private router: Router,private route: ActivatedRoute) { }

  ngOnInit() {
    this.id= this.route.snapshot.params['id']
  }

  back(){
    this.router.navigate(['home',this.id]);
  }

}
		withdraw-success.component.html
			<style>
    button{
   width: 200px;
   height: 50px;
   border-radius: 12px;
   box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
   font-size: larger;
   transition-duration: 0.4s;
   color: black;
   background-color:yellow;
   border-color: yellow;
   box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);
 transition-duration: 0.4s;
 }
 button:hover{
 background-color: lightgreen;
 color: white;
 border-color: lightgreen;
 }
 body{
   background-color: lawngreen;
   font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
   font-weight: 500;
   text-align: center;
   height: 250px;
 }
</style>
<body>
<h2>TRANSACTION SUCCESS!</h2><br/><img src="/assets/image/thumb1.png" style="width: 60px;">
<br/>
<br/>
<br/>
<button style="margin-left: 20px;" class="btn btn-primary" (click)="back()">BACK</button>
</body>
         ∇ constants
              constant-a.ts
              constant-b.ts
         ∇ enums
              enum-a.ts
              enum-b.ts
         ∇ models
              model-a.ts
              model-b.ts
         ∇ utils
              common-functions.ts
    ∇ features
         ∇ feature-a
              ∇ components
                    ∇ scoped-shared-component-a
                            scoped-shared-component-a.component.html|scss|ts
                    ∇ scope-shared-component-b
                            scoped-shared-component-b.component.html|scss|ts
              ∇ pages
                   ∇ page-a
                        page-a.component.html|scss|ts
                   ∇ page-b
                        page-b.component.html|scss|ts
              ∇ models
                    scoped-model-a.model.ts
                    scoped-model-b.model.ts
              ∇ services
                    scoped-service-a.service.ts
                    scoped-service-b.service.ts
              feature-a-routing.module.ts
              feature-a.module.ts
              feature-a.component.html|scss|ts
    ∇ shared
         ∇ components
              ∇ shared-button
                   shared-button.component.html|scss|ts
         ∇ directives
              shared-directive.ts
         ∇ pipes
              shared-pipe.ts
         shared.module.ts
    styles.scss
    ▽ styles
        app-loading.scss
        company-colors.scss
        spinners.scss
        variables.scss
    ▽ assets
        ▽ i18n
            lang-a.json
            lang-b.json
        ▽ images
            money.png
            thumbs1.png
        ▽ static
            structure-a.json
            structure-b.json
        ▽ icons
            custom-icon-a.svg
            custom-icon-b.svg
